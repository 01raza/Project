plot(trees)
}
for(i in 1:100) {
births[i]<- sample(1:100,1)
fractions[i]<- sample(1:100,1)
trees <- pbtree(b=births[i], d=(fractions[i]*births[i]),n=100)
plot(trees)
}
str(trees)
str(trees)
for(i in 1:100) {
births[i]<- sample(1:100,1)
fractions[i]<- sample(1:100,1)
trees <- pbtree(b=births[i], d=(fractions[i]*births[i]),n=100)
plot(trees)
}
for(i in 1:100) {
births[i]<- sample(1:100,1)
fractions[i]<- sample(1:100,1)
trees <- pbtree(b=births[i], d=(fractions[i]*births[i]),n=1)
plot(trees)
}
for(i in 1:100) {
births[i]<- sample(1:100,1)
fractions[i]<- sample(1:100,1)
trees <- pbtree(b=births[i], d=(fractions[i]*births[i]),n=1000)
plot(trees)
}
for(i in 1:100) {
births[i]<- sample(1:100,1)
fractions[i]<- sample(1:100,1)
trees <- pbtree(b=births[i], d=(fractions[i]*births[i]),n=1000)
plot(trees)
}
for(i in 1:100) {
births[i]<- sample(1:100,1)
fractions[i]<- sample(1:100,1)
trees <- pbtree(b=births[i], d=(fractions[i]*births[i]),n=100)
plot(trees)
}
?plot
t<- pbtree(b=1, d=20,n=100)
plot(t)
t<- pbtree(b=2, d=20,n=100)
plot(t)
t<- pbtree(b=2, d=1,n=100)
plot(t)
t<- pbtree(b=0, d=1,n=100)
plot(t)
t<- pbtree(b=14, d=1,n=100)
plot(t)
t<- pbtree(b=14, d=12,n=100)
plot(t)
t<- pbtree(b=14, d=01,n=100)
plot(t)
t<- pbtree(b=14, d=5,n=100)
plot(t)
t<- pbtree(b=2, d=5,n=100)
plot(t)
t<- pbtree(b=200, d=5,n=100)
plot(t)
t<- pbtree(b=200, d=100,n=100)
plot(t)
t<- pbtree(b=200, d=0,n=100)
plot(t)
t<- pbtree(b=200, d=1,n=100)
plot(t)
t<- pbtree(b=2, d=1,n=100)
plot(t)
?pbtree
library(phytools)
trees<-vector("list",1)
trees
births<-c()
births
fractions<-c()
fractions
?pbtree
for(i in 1:100) {
births[i]<- sample(1:100,1)
fractions[i]<- sample(1:100,1)
trees <- pbtree(b=births[i], d=(fractions[i]*births[i]),n=100)
bindtree<-bind.tree(trees[i])
}
trees<-vector("list",1)
trees
births<-c()
births
fractions<-c()
fractions
?pbtree
for(i in 1:100) {
births[i]<- sample(1:100,1)
fractions[i]<- sample(1:100,1)
trees <- pbtree(b=births[i], d=(fractions[i]*births[i]),n=100)
bindtree<-bind.tree(trees[i], trees[i])
}
str(trees)
plot(bindtree)
plot(trees)
for(i in 1:100) {
births[i]<- sample(1:100,1)
fractions[i]<- sample(1:100,1)
trees[[i]] <- pbtree(b=births[i], d=(fractions[i]*births[i]),n=100)
bindtree<-bind.tree(trees[i], trees[i])
}
for(i in 1:100) {
births[i]<- sample(1:100,1)
fractions[i]<- sample(1:100,1)
trees[[i]] <- pbtree(b=births[i], d=(fractions[i]*births[i]),n=100)
#  bindtree<-bind.tree(trees[i], trees[i])
}
plot(trees[[1]])
plot(trees[[2]])
sapply(trees, length)
sapply(trees, Ntip)
sapply(trees, Ntip)
for(i in 1:100) {
births[i]<- runif(1)
fractions[i]<- runif(1)
trees[[i]] <- pbtree(b=births[i], d=(fractions[i]*births[i]),n=100)
#  bindtree<-bind.tree(trees[i], trees[i])
}
str(trees)
plot(trees[[2]])
sapply(trees, Ntip)
for(i in 1:100) {
births[i]<- runif(1,0,100)
fractions[i]<- runif(1,0,100)
trees[[i]] <- pbtree(b=births[i], d=(fractions[i]*births[i]),n=100)
}
str(trees)
plot(trees[[2]])
for(i in 1:100) {
births[i]<- runif(1,0,100)
fractions[i]<- runif(1,0,100)
trees[[i]] <- pbtree(b=births[i], d=(fractions[i]*births[i]),n=100)
}
str(trees)
sapply(trees, Ntip)
runif(1,0,100)
runif(1,0,100)
runif(1,0,100)
runif(1)
runif(1,0,100)
for(i in 1:100) {
births[i]<- runif(1)
fractions[i]<- runif(1)
trees[[i]] <- pbtree(b=births[i], d=(fractions[i]*births[i]),n=100)
}
sapply(trees, Ntip)
plot(trees[[2]])
plot(trees[[1]])
plot(trees[[10]])
plot(trees[[100]])
Ntip(trees)
plot(trees[100])
plot(trees[[100]])
plot(trees[[5]])
trees$tip.label
trees[[i]]$tip.label
trees[[2]]$tip.label
r<- (births[i]- (fractions[i]*births[i]))
plot(r, Ntip)
r
r[i]<- (births[i]- (fractions[i]*births[i]))
r
plot(r, Ntip)
Ntip
for(i in 1:100) {
births[i]<- runif(1)
fractions[i]<- runif(1)
trees[[i]] <- pbtree(b=births[i], d=(fractions[i]*births[i]),n=100)
r[[i]]<- (births[i]- (fractions[i]*births[i]))
}
str(trees)
plot(trees[[5]])
trees[[2]]$tip.label
### Question 4
tips<-sapply(trees, Ntip)
diversification<- sapply(trees,r)
diversification<- sapply(trees,r[[i]])
r
plot(r, Ntip)
plot(r, tips)
fit.bd<-birthdeath(trees)
library(phytools)
fit.bd<-birthdeath(trees)
fit.bd<-birthdeath(trees[[i]])
### Question 5
births
trees<-vector("list",1)
trees
births<-c()
births
fractions<-c()
fractions
?pbtree
for(i in 1:100) {
births[i]<- runif(1)
fractions[i]<- runif(1)
trees[[i]] <- pbtree(b=births[i], d=(fractions[i]*births[i]),n=100)
r[[i]]<- (births[i]- (fractions[i]*births[i]))
}
str(trees)
plot(trees[[5]])
trees[[2]]$tip.label
library(phytools)
trees<-vector("list",1)
trees
births<-c()
births
fractions<-c()
fractions
?pbtree
for(i in 1:100) {
births[i]<- runif(1)
fractions[i]<- runif(1)
trees[[i]] <- pbtree(b=births[i], d=(fractions[i]*births[i]),n=100)
r[[i]]<- (births[i]- (fractions[i]*births[i]))
}
str(trees)
plot(trees[[5]])
trees[[2]]$tip.label
library(phytools)
trees<-vector("list",1)
births<-c()
fractions<-c()
?pbtree
for(i in 1:100) {
births[i]<- runif(1)
fractions[i]<- runif(1)
trees[[i]] <- pbtree(b=births[i], d=(fractions[i]*births[i]),n=100)
r[[i]]<- (births[i]- (fractions[i]*births[i]))
}
trees<-vector("list",1)
births<-c()
fractions<-c()
r<-c()
?pbtree
for(i in 1:100) {
births[i]<- runif(1)
fractions[i]<- runif(1)
trees[[i]] <- pbtree(b=births[i], d=(fractions[i]*births[i]),n=100)
r[[i]]<- (births[i]- (fractions[i]*births[i]))
}
plot(trees[[5]])
str(trees)
s<-()
?pbtree
for(i in 1:100) {
births[i]<- runif(1)
fractions[i]<- runif(1)
trees[[i]] <- pbtree(b=births[i], d=(fractions[i]*births[i]),n=100)
r[[i]]<- (births[i]- (fractions[i]*births[i]))
s[[i]]<-births[i]
}
str(trees)
s<-c()
?pbtree
for(i in 1:100) {
births[i]<- runif(1)
fractions[i]<- runif(1)
trees[[i]] <- pbtree(b=births[i], d=(fractions[i]*births[i]),n=100)
r[[i]]<- (births[i]- (fractions[i]*births[i]))
s[[i]]<-births[i]
}
?sapply
plot(r, tips)
trees<-vector("list",1)
births<-c()
fractions<-c()
r<-c()
s<-c()
?pbtree
for(i in 1:100) {
births[i]<- runif(1)
fractions[i]<- runif(1)
trees[[i]] <- pbtree(b=births[i], d=(fractions[i]*births[i]),n=100)
r[[i]]<- (births[i]- (fractions[i]*births[i]))
s[[i]]<-births[i]
}
str(trees)
plot(trees[[5]])
trees[[2]]$tip.label
?sapply
### Question 4
tips<-sapply(trees, Ntip)
plot(r, tips)
plot(r, tips)
abline()
?abline
plot(r, tips)
abline(tips, r)
abline(r, tips)
abline(r, tips)
abline(r, tips)
plot(r, tips)
abline(r, tips)
tips
trees[[2]]$tip.label
trees[[1]]$tip.label
trees[[99]]$tip.label
trees[[100]]$tip.label
### Question 5
plot(trees, type="fan")
### Question 5
plot(trees[[5]], type="fan")
tips<-log(sapply(trees, Ntip))
tips
plot(r, tips)
plot(r, tips, xlab= diversification, ylab= log of number of tips)
plot(r, tips, xlab= "diversification, ylab= "log of number of tips")
plot(r, tips, xlab= "diversification", ylab= "log of number of tips")
?plot
plot(r, tips, xlab= "diversification", ylab= "log of number of tips", col="black", pch=16)
plot(r, tips, xlab= "diversification", ylab= "log of number of tips", col="black", pch=21)
plot(r, tips, xlab= "diversification", ylab= "log of number of tips", col="black", pch=13)
plot(r, tips, xlab= "diversification", ylab= "log of number of tips", col="black", pch=9)
plot(r, tips, xlab= "diversification", ylab= "log of number of tips", col="black", pch=15)
plot(r, tips, xlab= "diversification", ylab= "log of number of tips", col="black", pch=16)
plot(r, tips, xlab= "diversification", ylab= "log of number of tips", col="black", pch=17)
plot(r, tips, xlab= "diversification", ylab= "log of number of tips", col="black", pch=18)
plot(r, tips, xlab= "diversification", ylab= "log of number of tips", col="orange", pch=18)
lm(formula = tips ~ r)
abline(lm(tips ~ r))
r
tips
plot(tips,r, xlab= "diversification", ylab= "log of number of tips", col="orange", pch=18)
plot(tips,r, xlab="log of number of tips" , ylab= "diversification", col="orange", pch=18)
abline(lm(tips ~ r))
cor(tips,r)
r1<-unlist(r)
plot(tips,r1, xlab="log of number of tips" , ylab= "diversification", col="orange", pch=18)
cor(tips,r1)
plot(tips,r1, xlab="log of number of tips" , ylab= "diversification", col="orange", pch=18)
abline(lm(tips ~ r1))
plot(tips,r1, xlab="log of number of tips" , ylab= "diversification", col="orange", pch=18)
abline(lm(tips ~ r1))
lm(tips ~ r1))
lm(tips ~ r1)
abline(3.191, 2.717)
plot(tips,r1, xlab="log of number of tips" , ylab= "diversification", col="orange", pch=18)
abline(3.191, 2.717)
s1<-unlist(s)
s1
compute.brlen(trees)
class(trees)
trees$edge.length
trees<-vector("list",1)
births<-c()
fractions<-c()
r<-c()
s<-c()
branch<-c()
?pbtree
for(i in 1:100) {
births[i]<- runif(1)
fractions[i]<- runif(1)
trees[[i]] <- pbtree(b=births[i], d=(fractions[i]*births[i]),n=100)
r[[i]]<- (births[i]- (fractions[i]*births[i]))
s[[i]]<-births[i]
branch[[i]]<-trees[[i]]$edge.length
}
branch
trees<-vector("list",1)
births<-c()
fractions<-c()
r<-c()
s<-c()
branch<-c()
?pbtree
for(i in 1:100) {
births[i]<- runif(1)
fractions[i]<- runif(1)
trees[[i]] <- pbtree(b=births[i], d=(fractions[i]*births[i]),n=100)
r[[i]]<- (births[i]- (fractions[i]*births[i]))
s[[i]]<-births[i]
branch[[i]]<-mean(trees[[i]]$edge.length)
}
branch
plot(branch,s1, xlab="Average branch length" , ylab= "speciaiton rate", col="orange", pch=18)
setwd('C:\\Users\\Raza\\Desktop\\Evolution\\Project\\Data')
#dir()
data<- read.csv("brain.csv",stringsAsFactors=F)
data$brain.body.ratio<-(data$brain.mass/data$body.mass)
rownames(data) <- gsub(" ", "_", data[,2])
#head(data)
library(phytools)
Trees <- read.nexus("tree.nex")
Phy <- Trees[[1]]
Pruned <- data[Phy$tip.label,]
x <- Pruned$brain.body.ratio
names(x) <- rownames(Pruned)
library(BAMMtools)
setwd('C:\\Users\\Raza\\Desktop\\bamm-2.5.0-Windows')
Tree <- read.tree("phy.tre")
tree <- Tree[[1]]
eData <- getEventData(tree, "mar31_event_data.txt", burnin=0.5)
trait <- data[eData$tip.label, "brain.body.ratio"]
names(trait) <- eData$tip.label
plot(eData, spex="s") # set spex to e for extinction, netdiv for net diversification
meanSpeciation <- eData$meanTipLambda
names(meanSpeciation) <- tree$tip.label
meanExtinction <- eData$meanTipMu
names(meanExtinction) <- tree$tip.label
plot(meanSpeciation, trait, xlab = "Mean Speciation", ylab = "Brain/Body Mass Ratio")
plot(meanSpeciation, trait, xlab = "Mean Speciation", ylab = "Brain/Body Mass Ratio", psh=16)
plot(meanSpeciation, trait, xlab = "Mean Speciation", ylab = "Brain/Body Mass Ratio", pch=o)
plot(meanSpeciation, trait, xlab = "Mean Speciation", ylab = "Brain/Body Mass Ratio", color="orange",pch=16)
plot(meanExtinction, trait, xlab = "Mean Extinction", ylab = "Brain/Body Mass Ratio", color="orange",pch=16)
meanDiversification<- meanSpeciation-meanExtinction
meanDiversification<- meanSpeciation-meanExtinction
names(meanDiversification) <- tree$tip.label
plot(meanDiversification, trait, xlab = "Mean Diversification", ylab = "Brain/Body Mass Ratio", color="orange",pch=16)
DRstat <- function(tree) {
spRate <- function(sp, tree) {
#get branch lengths from root to tip
edges <- vector()
daughterNode <- match(sp, tree$tip.label)
while (daughterNode != (length(tree$tip.label) + 1)) {
parentNode <- tree$edge[which(tree$edge[,2] == daughterNode), 1]
edges <- c(edges, tree$edge.length[which(tree$edge[,1] == parentNode & tree$edge[,2] == daughterNode)])
daughterNode <- parentNode
}
res <- sum(sapply(1:length(edges), function(x) edges[x] * (1/(2 ^ (x-1)))))
res <- res ^ (-1)
return(res)
}
rates <- unlist(lapply(tree$tip.label, function(x) spRate(x, tree)))
names(rates) <- tree$tip.label
return(rates)
}
DRrates <- DRstat(tree)
plot(DRrates, trait)
strappBBR <- traitDependentBAMM(eData, trait, reps=100)
strappBBR2
strappBBR1<- traitDependentBAMM(eData, trait, reps=100,rate="net diversification")
strappBBR2<- traitDependentBAMM(eData, trait, reps=100,rate="extinction")
strappBBR1
cor.test(DRrates, trait, method="spear")
DRrates
cor.test(DRrates, trait, method="spear")
plot(DRrates, trait,color="orange",pch=16)
plot(DRrates, trait,col="orange",pch=16)
plot(DRrates, trait,col="black",pch=16)
plot(DRrates, trait,col="7",pch=16)
plot(DRrates, trait,col="10",pch=16)
plot(DRrates, trait,col="10",pch=1)
plot(meanSpeciation, trait, xlab = "Mean Speciation", ylab = "Brain/Body Mass Ratio", col="orange",pch=1)
plot(meanExtinction, trait, xlab = "Mean Extinction", ylab = "Brain/Body Mass Ratio", col="pink",pch=1)
plot(meanDiversification, trait, xlab = "Mean Diversification", ylab = "Brain/Body Mass Ratio", color="brown",pch=1)
plot(meanDiversification, trait, xlab = "Mean Diversification", ylab = "Brain/Body Mass Ratio", color="brown",pch=1)
plot(meanDiversification, trait, xlab = "Mean Diversification", ylab = "Brain/Body Mass Ratio", col="brown",pch=1)
plot(log(meanDiversification), trait, xlab = "Mean Diversification", ylab = "Brain/Body Mass Ratio", col="brown",pch=1)
plot(log(meanDiversification), log(trait), xlab = "Mean Diversification", ylab = "Brain/Body Mass Ratio", col="brown",pch=1)
plot(meanDiversification, trait, xlab = "Mean Diversification", ylab = "Brain/Body Mass Ratio", col="brown",pch=1)
plot(trait,meanDiversification,  xlab = "Mean Diversification", ylab = "Brain/Body Mass Ratio", col="brown",pch=1)
trait,
plot(meanDiversification, trait, xlab = "Mean Diversification", ylab = "Brain/Body Mass Ratio", col="brown",pch=1)
plot(meanExtinction, trait, xlab = "Mean Extinction", ylab = "Brain/Body Mass Ratio", col="pink",pch=1)
plot(meanSpeciation, trait, xlab = "Mean Speciation", ylab = "Brain/Body Mass Ratio", col="orange",pch=1)
plot(meanDiversification, trait, xlab = "Mean Diversification", ylab = "Brain/Body Mass Ratio", col="brown",pch=1)
plot(meanSpeciation, trait, xlab = "Mean Speciation", ylab = "Brain/Body Mass Ratio", col="orange",pch=1)
plot(meanExtinction, trait, xlab = "Mean Extinction", ylab = "Brain/Body Mass Ratio", col="pink",pch=1)
plot(meanSpeciation, trait, xlab = "Mean Speciation", ylab = "Brain/Body Mass Ratio", col="orange",pch=1)
plot(meanExtinction, trait, xlab = "Mean Extinction", ylab = "Brain/Body Mass Ratio", col="pink",pch=1)
plot(meanDiversification, trait, xlab = "Mean Diversification", ylab = "Brain/Body Mass Ratio", col="brown",pch=1)
plot(meanDiversification, trait, xlab = "Mean Diversification", ylab = "Brain/Body Mass Ratio", main= "Mean diversification vs Trait with BAMM" col="brown",pch=1)
plot(meanDiversification, trait, xlab = "Mean Diversification", ylab = "Brain/Body Mass Ratio", main= "Mean diversification vs Trait with BAMM" col="brown",pch=1)
plot(meanDiversification, trait, xlab = "Mean Diversification", ylab = "Brain/Body Mass Ratio", main= "Mean diversification vs Trait with BAMM", col="brown",pch=1)
abline(lm(meanDiversification ~ trait))
plot(meanDiversification, trait, xlab = "Mean Diversification", ylab = "Brain/Body Mass Ratio", main= "Mean diversification vs Trait with BAMM", col="brown",pch=1)
plot(DRrates, trait,xlab = "DR rates", ylab = "Brain/Body Mass Ratio", main= "DR rates vs Trait with DR", col="10",pch=1)
abline(lm(DRrates ~ trait))
plot(DRrates, trait,xlab = "DR rates", ylab = "Brain/Body Mass Ratio", main= "DR rates vs Trait with DR", col="10",pch=1)
plot(meanDiversification, trait, xlab = "Mean Diversification", ylab = "Brain/Body Mass Ratio", main= "Mean diversification vs Trait with BAMM", col="brown",pch=1)
abline(lm(meanDiversification ~ trait))
strappBBR <- traitDependentBAMM(eData, trait, reps=100)
strappBBR
strappBBR2<- traitDependentBAMM(eData, trait, reps=100,rate="extinction")
strappBBR2
strappBBR1<- traitDependentBAMM(eData, trait, reps=100,rate="net diversification")
strappBBR1
meanSpeciation
?traitDependentBAMM
class(meanSpeciation)
eData
class(eData)
summary(eData)
summary(eData, , spex="s")
summary(eData, , spex="e")
, spex="s"
plotRateThroughTime(edata, ratetype="speciation")
eData <- getEventData(tree, "mar31_event_data.txt", burnin=0.5)
plotRateThroughTime(edata, ratetype="speciation")
plotRateThroughTime(eData, ratetype="speciation")
plotRateThroughTime(edata, ratetype="e")
plotRateThroughTime(eData, ratetype="e")
plotRateThroughTime(eData, ratetype="netdiv")
cst <- cumulativeShiftProbsTree(eData)
plot.phylo(cst)
credibleShiftSet(eData)
credibleShiftSet(eData, 1)
?credibleShiftSet
credibleShiftSet(eData, 8)
getBestShiftConfiguration(eData)
getBestShiftConfiguration(eData, 1)
plot.bammshifts(eData)
summary(eData)
cor.test(DRrates, trait, method="spear")
?traitDependentBAMM
